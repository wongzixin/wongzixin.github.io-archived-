# Facet 6
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm) +
geom_point() +
facet_grid(. ~ species)
# Facet and Colour
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species) +
geom_point() +
facet_grid(species ~ sex) + scale_colour_viridis_d()
# Facet and Colour without Legend
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species) +
geom_point() +
facet_grid(species ~ sex) + scale_colour_viridis_d() +
guides(colour = "none")
# Load package and dataset
# Enter code here
library(openintro)
glimpse(loans_full_schema)
# Select variables
# Enter code here
loans <- loans_full_schema %>%
select(loan_amount, interest_rate, term, grade,
state, annual_income, homeownership, debt_to_income)
glimpse(loans)
# Plotting a histogram
# Enter code here
ggplot(loans) + as(x = loan_amount) +
geom_histogram()
# Plotting a histogram
# Enter code here
ggplot(loans) + aes(x = loan_amount) +
geom_histogram()
# Adjusting binwidth=1000
# Enter code here
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 1000)
# Adjusting binwidth=5000
# Enter code here
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 5000)
# Adjusting binwidth=20000
# Enter code here
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 20000)
# Customising Histograms
# Enter code here
ggplot(loans, aes(x = loan_amount)) + geom_histogram(binwidth = 5000) +
labs(x = "Loan amount ($)", y = "Frequency", title = "Amounts of Lending Club Loans")
# Fill with a categorical variable
# Enter code here
ggplot(loans, aes(x = loan_amount, fill = homeownership)) +
geom_histogram(binwidth = 5000, alpha = 0.5) +
labs(x = "Loan amount ($)", y = "Frequency", title = "Amounts of Lending Club Loans")
# Facet with a categorical variable
# Enter code here
ggplot(loans, aes(x = loan_amount, fill = homeownership)) +
geom_histogram(binwidth = 5000) +
labs(x = "Loan amount ($)", y = "Frequency", title = "Amounts of Lending Club Loans") +
facet_wrap(~ homeownership, nrow = 3)
# Density Plot
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density()
# Density Plot and adjusting binwidth
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density(adjust = 0.5)
# Density Plot and adjusting binwidth
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density(adjust = 1)
# Density Plot and adjusting binwidth
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density(adjust = 2)
# Customising Density Plot
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density(adjust = 2) +
labs(x = "Loan amount ($)", y = "Density", title = "Amounts of Lending Club loans")
# Adding a categorical variabl
# Enter code here
ggplot(loans, aes(x = loan_amount, fill = homeownership)) +
geom_density(adjust = 2, alpha = 0.5) +
labs(x = "Loan amount ($)", y = "Density", title = "Amounts of Lending Club loans", fill = "Homeownership")
# Boxplot
# Enter code here
ggplot(loans, aes(x = interest_rate)) +
geom_boxplot()
# Boxplot and outliers
# Enter code here
ggplot(loans, aes(x = annual_income)) +
geom_boxplot()
# Customising boxplots
# Enter code here
ggplot(loans, aes(x = interest_rate)) +geom_boxplot() +labs(x = "Interest rate (%)",y = NULL,
title = "Interest rates of Lending Club loans") +
theme( axis.ticks.y = element_blank(), axis.text.y = element_blank() )
# Adding a categoric variabl
# Enter code here
ggplot(loans, aes(x = interest_rate,
y = grade)) +
geom_boxplot() +
labs(x = "Interest rate (%)",y = "Grade",title = "Interest rates of Lending Club loans",subtitle = "by grade of loan")
# Scatterplot
# Enter code here
ggplot(loans, aes(x = debt_to_income, y = interest_rate)) +
geom_point()
# Hex plot
# Enter code here
ggplot(loans, aes(x = debt_to_income, y = interest_rate)) +
geom_hex()
# Hex plot
# Enter code here
ggplot(loans %>% filter(debt_to_income < 100),
aes(x = debt_to_income, y = interest_rate)) +
geom_hex()
# Bar plot
# Enter code here
ggplot(loans, aes(x = homeownership)) +
geom_bar()
# Segmented Bar plot
# Enter code here
ggplot(loans, aes(x = homeownership,
fill = grade)) +
geom_bar()
# Segmented Bar plot with equal heights for better comparison
# Enter code here
ggplot(loans, aes(x = homeownership, fill = grade)) +
geom_bar(position = "fill")
# Customising bar plots
# Enter code here
ggplot(loans, aes(y = homeownership, fill = grade)) + geom_bar(position = "fill") +
labs(x = "Proportion", y = "Homownership", fill = "Grade", title = "Grades of Lending Club Loans")
# Violin plots
# Enter code here
ggplot(loans, aes(x = homeownership, y = loan_amount)) +
geom_violin()
# Ridge plots
# Enter code here
library(ggridges)
# Ridge plots
# Enter code here
install.packags(ggridges)
# Ridge plots
# Enter code here
install.packages(ggridges)
library(ggridges)
# Ridge plots
# Enter code here
install.packages("ggridges")
library(ggridges)
ggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) +
geom_density_ridges(alpha = 0.5)
# Add title, subtitle, label axes, label legend, add caption
# Enter code here
ggplot(data=penguins,
mapping = aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adeli, Chinstrap, Gentoo",
x = "Bill depth (mm)", y = "Bill lengtth (mm)",
colour = "Species",
caption = "Source: Github penguins.csv")
# Using a discrete colour scale
# Enter code here
ggplot(data=penguins,
mapping = aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adeli, Chinstrap, Gentoo",
x = "Bill depth (mm)", y = "Bill lengtth (mm)",
colour = "Species",
caption = "Source: Github penguins.csv") +
scale_colour_viridis_d()
# Alternative ways to plot graph
# Enter code here
ggplot(penguins,
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species)) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adeli, Chinstrap, Gentoo",
x = "Bill depth (mm)", y = "Bill lengtth (mm)",
colour = "Species",
caption = "Source: Github penguins.csv") +
scale_colour_viridis_d()
# Alternative ways to plot graph
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species) +
geom_point() +
labs(title = "Bill depth and length",
subtitle = "Dimensions for Adeli, Chinstrap, Gentoo",
x = "Bill depth (mm)", y = "Bill lengtth (mm)",
colour = "Species",
caption = "Source: Github penguins.csv") +
scale_colour_viridis_d()
# Mapping colour to a specific variable
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species) +
geom_point() + scale_colour_viridis_d()
# Mapping shape to a specific variable
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species,
shape = island) +
geom_point() + scale_colour_viridis_d()
# Mapping shape to a specific variable
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species,
shape = species) +
geom_point() + scale_colour_viridis_d()
# Mapping size to a specific variable
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species,
shape = species,
size = body_mass_g) +
geom_point() + scale_colour_viridis_d()
# Mapping alpha to a specific variable
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species,
shape = species,
size = body_mass_g,
alpha = flipper_length_mm) +
geom_point() + scale_colour_viridis_d()
# Mapping VS Setting
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
size = body_mass_g,
alpha = flipper_length_mm) +
geom_point()
# Mapping VS Setting
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm) +
geom_point(size = 2, alpha = 0.5)
# Faceting
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm) +
geom_point() +
facet_grid(species ~ island)
# Facet w
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm) +
geom_point() +
facet_grid(species ~ sex)
# Facet 3
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm) +
geom_point() +
facet_grid(sex ~ species)
# Facet 4
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm) +
geom_point() +
facet_wrap(~ species)
# Facet 5
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm) +
geom_point() +
facet_wrap(~ species, ncol = 2)
# Facet 6
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm) +
geom_point() +
facet_grid(. ~ species)
# Facet and Colour
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species) +
geom_point() +
facet_grid(species ~ sex) + scale_colour_viridis_d()
# Facet and Colour without Legend
# Enter code here
ggplot(penguins) +
aes(x=bill_depth_mm,
y=bill_length_mm,
colour = species) +
geom_point() +
facet_grid(species ~ sex) + scale_colour_viridis_d() +
guides(colour = "none")
# Load package and dataset
# Enter code here
library(openintro)
glimpse(loans_full_schema)
# Select variables
# Enter code here
loans <- loans_full_schema %>%
select(loan_amount, interest_rate, term, grade,
state, annual_income, homeownership, debt_to_income)
glimpse(loans)
# Plotting a histogram
# Enter code here
ggplot(loans) + aes(x = loan_amount) +
geom_histogram()
# Adjusting binwidth=1000
# Enter code here
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 1000)
# Adjusting binwidth=5000
# Enter code here
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 5000)
# Adjusting binwidth=20000
# Enter code here
ggplot(loans) + aes(x = loan_amount) +
geom_histogram(binwidth = 20000)
# Customising Histograms
# Enter code here
ggplot(loans, aes(x = loan_amount)) + geom_histogram(binwidth = 5000) +
labs(x = "Loan amount ($)", y = "Frequency", title = "Amounts of Lending Club Loans")
# Fill with a categorical variable
# Enter code here
ggplot(loans, aes(x = loan_amount, fill = homeownership)) +
geom_histogram(binwidth = 5000, alpha = 0.5) +
labs(x = "Loan amount ($)", y = "Frequency", title = "Amounts of Lending Club Loans")
# Facet with a categorical variable
# Enter code here
ggplot(loans, aes(x = loan_amount, fill = homeownership)) +
geom_histogram(binwidth = 5000) +
labs(x = "Loan amount ($)", y = "Frequency", title = "Amounts of Lending Club Loans") +
facet_wrap(~ homeownership, nrow = 3)
# Density Plot
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density()
# Density Plot and adjusting binwidth
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density(adjust = 0.5)
# Density Plot and adjusting binwidth
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density(adjust = 1)
# Density Plot and adjusting binwidth
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density(adjust = 2)
# Customising Density Plot
# Enter code here
ggplot(loans, aes(x = loan_amount)) +
geom_density(adjust = 2) +
labs(x = "Loan amount ($)", y = "Density", title = "Amounts of Lending Club loans")
# Adding a categorical variable
# Enter code here
ggplot(loans, aes(x = loan_amount, fill = homeownership)) +
geom_density(adjust = 2, alpha = 0.5) +
labs(x = "Loan amount ($)", y = "Density", title = "Amounts of Lending Club loans", fill = "Homeownership")
# Boxplot
# Enter code here
ggplot(loans, aes(x = interest_rate)) +
geom_boxplot()
# Boxplot and outliers
# Enter code here
ggplot(loans, aes(x = annual_income)) +
geom_boxplot()
# Customising boxplots
# Enter code here
ggplot(loans, aes(x = interest_rate)) +geom_boxplot() +labs(x = "Interest rate (%)",y = NULL,
title = "Interest rates of Lending Club loans") +
theme( axis.ticks.y = element_blank(), axis.text.y = element_blank() )
# Adding a categoric variable
# Enter code here
ggplot(loans, aes(x = interest_rate,
y = grade)) +
geom_boxplot() +
labs(x = "Interest rate (%)",y = "Grade",title = "Interest rates of Lending Club loans",subtitle = "by grade of loan")
# Scatterplot
# Enter code here
ggplot(loans, aes(x = debt_to_income, y = interest_rate)) +
geom_point()
# Hex plot
# Enter code here
ggplot(loans, aes(x = debt_to_income, y = interest_rate)) +
geom_hex()
# Hex plot
# Enter code here
ggplot(loans %>% filter(debt_to_income < 100),
aes(x = debt_to_income, y = interest_rate)) +
geom_hex()
# Bar plot
# Enter code here
ggplot(loans, aes(x = homeownership)) +
geom_bar()
# Segmented Bar plot
# Enter code here
ggplot(loans, aes(x = homeownership,
fill = grade)) +
geom_bar()
# Segmented Bar plot with equal heights for better comparison
# Enter code here
ggplot(loans, aes(x = homeownership, fill = grade)) +
geom_bar(position = "fill")
# Customising bar plots
# Enter code here
ggplot(loans, aes(y = homeownership, fill = grade)) + geom_bar(position = "fill") +
labs(x = "Proportion", y = "Homownership", fill = "Grade", title = "Grades of Lending Club Loans")
# Violin plots
# Enter code here
ggplot(loans, aes(x = homeownership, y = loan_amount)) +
geom_violin()
# Ridge plots
# Enter code here
install.packages("ggridges")
library(ggridges)
ggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) +
geom_density_ridges(alpha = 0.5)
# Ridge plots
# Enter code here
chooseCRANmirror()
install.packages("ggridges")
library(ggridges)
ggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) +
geom_density_ridges(alpha = 0.5)
# Ridge plots
# Enter code here
install.packages("ggridges")
library(ggridges)
ggplot(loans, aes(x = loan_amount, y = grade, fill = grade, colour = grade)) +
geom_density_ridges(alpha = 0.5)
# Ridge plots
# Enter code here
chooseCRANmirror(graphics = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Ridge plots
# Enter code here
#install.packages("ggridges")
library(ggridges)
ggplot(loans, aes(x = loan_amount, y = grade, fill = grade, colour = grade)) +
geom_density_ridges(alpha = 0.5)
# Ridge plots
# Enter code here
#install.packages("ggridges")
library(ggridges)
library(ggplot)
# Ridge plots
# Enter code here
#install.packages("ggridges")
library(ggridges)
install.packages("ggplot")
library(ggplot)
# Ridge plots
# Enter code here
#install.packages("ggridges")
library(ggridges)
#install.packages("ggplot")
library(ggplot2)
ggplot(loans, aes(x = loan_amount, y = grade, fill = grade, colour = grade)) +
geom_density_ridges(alpha = 0.5)
# Ridge plots
# Enter code here
#install.packages("ggridges")
library(ggridges)
library(ggplot2)
ggplot(loans, aes(x = loan_amount, y = grade, fill = grade, colour = grade)) +
geom_density_ridges(alpha = 0.5)
# Ridge plots
# Enter code here
#install.packages("ggridges")
library(ggridges)
library(ggplot2)
ggplot(loans, aes(x = loan_amount, y = grade, fill = grade, colour = grade)) +
geom_density_ridges(alpha = 0.5)
